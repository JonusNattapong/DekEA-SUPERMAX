"""
Performance System Demo - ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö Report Winrate
"""

import sys
import os
from datetime import datetime, timedelta
import random

# ‡πÄ‡∏û‡∏¥‡πà‡∏° path ‡πÄ‡∏û‡∏∑‡πà‡∏≠ import modules
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from src.utils.performance_tracker import PerformanceTracker, TradeRecord, create_tracker, add_sample_trades
from src.utils.trading_monitor import TradingMonitor, create_monitoring_system
from src.utils.performance_reporter import EnhancedTradingMonitor, create_enhanced_monitor

def demo_basic_performance_tracking():
    """Demo ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Performance Tracker ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô"""
    print("=" * 60)
    print("üéØ DEMO: Basic Performance Tracking")
    print("=" * 60)
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á tracker
    tracker = create_tracker("demo_data")
    
    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    print("üìä ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á...")
    add_sample_trades(tracker)
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
    print("\nüìà ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î:")
    tracker.print_formatted_report("both")
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏£‡∏≤‡∏ü
    print("\nüìä ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏£‡∏≤‡∏ü...")
    try:
        tracker.create_performance_chart("demo_data/demo_chart.png")
        print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: demo_data/demo_chart.png")
    except Exception as e:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÑ‡∏î‡πâ: {e}")

def demo_trading_monitor():
    """Demo ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Trading Monitor"""
    print("\n" + "=" * 60)
    print("üîç DEMO: Trading Monitor")
    print("=" * 60)
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á monitor
    monitor = create_monitoring_system("demo_data")
    
    # ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    print("üîì ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ó‡∏î‡∏™‡∏≠‡∏ö...")
    
    trade_id1 = monitor.open_trade(
        symbol="XAUUSD",
        entry_price=2050.0,
        position_type="LONG",
        position_size=0.1,
        strategy_name="Demo_Strategy",
        stop_loss=2030.0,
        take_profit=2080.0,
        notes="‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ó‡∏î‡∏™‡∏≠‡∏ö 1"
    )
    
    trade_id2 = monitor.open_trade(
        symbol="XAUUSD",
        entry_price=2055.0,
        position_type="SHORT",
        position_size=0.05,
        strategy_name="Demo_Strategy",
        stop_loss=2070.0,
        take_profit=2040.0,
        notes="‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ó‡∏î‡∏™‡∏≠‡∏ö 2"
    )
    
    print(f"‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î: {trade_id1}")
    print(f"‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î: {trade_id2}")
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà
    active_trades = monitor.get_active_trades()
    print(f"\nüîì ‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà: {len(active_trades)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    
    # ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ö‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    print("\nüîí ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ó‡∏î‡∏™‡∏≠‡∏ö...")
    
    # ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ó‡∏µ‡πà 1 ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≥‡πÑ‡∏£
    monitor.close_trade(trade_id1, 2075.0, "Take Profit Test")
    
    # ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ó‡∏µ‡πà 2 ‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô
    monitor.close_trade(trade_id2, 2065.0, "Stop Loss Test")
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
    print("\nüìä ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ:")
    daily_summary = monitor.get_daily_summary()
    
    for key, value in daily_summary.items():
        if isinstance(value, float):
            print(f"   {key}: {value:.2f}")
        else:
            print(f"   {key}: {value}")

def demo_enhanced_monitor_with_reporting():
    """Demo ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Enhanced Monitor ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô"""
    print("\n" + "=" * 60)
    print("üì§ DEMO: Enhanced Monitor with Telegram Reporting")
    print("=" * 60)
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á enhanced monitor (‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö demo)
    monitor = create_enhanced_monitor("demo_data", enable_reporting=False)
    
    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
    print("üìä ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°...")
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤
    base_date = datetime.now() - timedelta(days=7)
    
    for i in range(10):
        trade_date = base_date + timedelta(days=random.randint(0, 7))
        
        # ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î
        trade_id = monitor.open_trade(
            symbol="XAUUSD",
            entry_price=2000 + random.uniform(-30, 30),
            position_type=random.choice(["LONG", "SHORT"]),
            position_size=0.1,
            strategy_name=f"Demo_Strategy_{i%3 + 1}",
            notes=f"‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á {i+1}"
        )
        
        # ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ó‡∏±‡∏ô‡∏ó‡∏µ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö demo)
        exit_price = 2000 + random.uniform(-40, 40)
        monitor.close_trade(trade_id, exit_price, "Demo Close")
    
    print("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô (‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏à‡∏£‡∏¥‡∏á)
    print("\nüì§ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≤‡∏á ‡πÜ:")
    
    # ‡∏•‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
    try:
        print("   üìÖ ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô...")
        if hasattr(monitor, 'reporter') and monitor.reporter:
            # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ format ‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
            summary = monitor.get_daily_summary()
            formatted_msg = monitor.reporter._format_daily_summary(summary)
            print("   ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            print("   üìù ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°:")
            print("   " + "\n   ".join(formatted_msg.split("\n")[:10]))  # ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏Ñ‡πà 10 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÅ‡∏£‡∏Å
        else:
            print("   ‚ö†Ô∏è Reporter ‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
    except Exception as e:
        print(f"   ‚ùå Error creating daily report: {e}")
    
    # ‡∏•‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
    try:
        print("\n   üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå...")
        weekly_reports = monitor.tracker.get_weekly_report(2)
        if weekly_reports:
            print(f"   ‚úÖ ‡πÑ‡∏î‡πâ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô {len(weekly_reports)} ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå")
            for report in weekly_reports:
                print(f"      üìà {report.period}: Winrate {report.winrate:.1f}%, PnL {report.total_pnl:.2f}")
        else:
            print("   ‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå")
    except Exception as e:
        print(f"   ‚ùå Error creating weekly report: {e}")

def demo_integration_with_algorithm_manager():
    """Demo ‡∏Å‡∏≤‡∏£‡∏ú‡∏™‡∏≤‡∏ô‡∏£‡∏ß‡∏°‡∏Å‡∏±‡∏ö Algorithm Manager"""
    print("\n" + "=" * 60)
    print("ü§ñ DEMO: Integration with Algorithm Manager")
    print("=" * 60)
    
    try:
        from src.utils.trading_monitor import integrate_with_algorithm_manager
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á monitor
        monitor = create_monitoring_system("demo_data")
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏à‡∏≤‡∏Å Algorithm Manager
        mock_recommendation = {
            'signal': 'BUY',
            'current_price': 2055.5,
            'confidence': 0.75,
            'individual_signals': {
                'MA_Crossover': 'BUY',
                'RSI_Strategy': 'HOLD', 
                'MACD_Strategy': 'BUY'
            },
            'risk_metrics': {
                'stop_loss': 2035.0,
                'take_profit': 2085.0,
                'position_size': 0.1
            }
        }
        
        print("üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏à‡∏≤‡∏Å Algorithm Manager:")
        print(f"   üéØ Signal: {mock_recommendation['signal']}")
        print(f"   üí∞ Price: {mock_recommendation['current_price']}")
        print(f"   üìà Confidence: {mock_recommendation['confidence']}")
        
        # ‡πÉ‡∏ä‡πâ integration function
        print("\nüîÑ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Algorithm Manager...")
        trade_id = integrate_with_algorithm_manager(
            monitor=monitor,
            recommendation=mock_recommendation,
            symbol="XAUUSD",
            position_size=0.1
        )
        
        if trade_id:
            print(f"‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {trade_id}")
            
            # ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ó‡∏±‡∏ô‡∏ó‡∏µ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö demo)
            monitor.close_trade(trade_id, 2070.0, "Demo Integration")
            print(f"üîí ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        else:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡πÑ‡∏î‡πâ")
    
    except ImportError as e:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ import Algorithm Manager: {e}")
    except Exception as e:
        print(f"‚ùå Error in integration demo: {e}")

def show_file_structure():
    """‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô"""
    print("\n" + "=" * 60)
    print("üìÅ ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà")
    print("=" * 60)
    
    files_created = [
        "src/utils/performance_tracker.py - ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î",
        "src/utils/trading_monitor.py - ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡πÅ‡∏ö‡∏ö real-time",
        "src/utils/performance_reporter.py - ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡πà‡∏≤‡∏ô Telegram",
        "src/performance_system.py - ‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏°‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô",
        "demo_performance_system.py - ‡πÑ‡∏ü‡∏•‡πå demo ‡∏ô‡∏µ‡πâ"
    ]
    
    for file_info in files_created:
        print(f"‚úÖ {file_info}")
    
    print(f"\nüìÇ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô: demo_data/")
    print(f"üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô: demo_data/reports/")

def main():
    """‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ demo ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"""
    print("üéØ Dek Trading Signal - Performance System Demo")
    print("=" * 60)
    
    try:
        # Demo 1: Basic Performance Tracking
        demo_basic_performance_tracking()
        
        # Demo 2: Trading Monitor
        demo_trading_monitor()
        
        # Demo 3: Enhanced Monitor with Reporting
        demo_enhanced_monitor_with_reporting()
        
        # Demo 4: Integration with Algorithm Manager
        demo_integration_with_algorithm_manager()
        
        # ‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå
        show_file_structure()
        
        print("\n" + "=" * 60)
        print("üéâ Demo ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î!")
        print("=" * 60)
        print("\nüìö ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:")
        print("1. import ‡∏£‡∏∞‡∏ö‡∏ö: from src.performance_system import DekTradingSystem")
        print("2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö: system = DekTradingSystem()")
        print("3. ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå: recommendation = system.run_trading_analysis()")
        print("4. ‡πÄ‡∏ó‡∏£‡∏î: trade_id = system.execute_trade(recommendation)")
        print("5. ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô: system.send_performance_report('daily')")
        
        print("\nüîî ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:")
        print("- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ TELEGRAM_BOT_TOKEN ‡πÅ‡∏•‡∏∞ TELEGRAM_CHAT_ID ‡πÉ‡∏ô .env")
        print("- ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 18:00")
        print("- ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå‡πÄ‡∏ß‡∏•‡∏≤ 19:00")
        print("- ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 1 ‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 20:00")
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô demo: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
